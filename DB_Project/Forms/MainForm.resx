<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxExtractor.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CAgICAgICAgICAgICAgICAg//9k=
</value>
  </data>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>152, 17</value>
  </metadata>
</root>